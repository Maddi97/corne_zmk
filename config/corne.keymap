/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp E      &kp R           &kp T       &kp Y      &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp TAB     &kp A  &kp S  &kp D      &kp F           &kp G       &kp H      &kp J  &kp K      &kp L    &kp SEMI  &kp APOSTROPHE
&kp LSHFT   &kp Z  &kp X  &kp C      &kp V           &kp B       &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ENTER
                          &kp LCTRL  &kp LEFT_SHIFT  &kp LCMD    &kp SPACE  &mo 1  &mo 2
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&kp ESC    &kp N1         &kp N2        &kp N3         &kp N4        &kp N5           &kp N6        &kp N7        &kp N8    &kp N9     &kp N0     &kp BSPC
&kp TAB    &kp LS(EXCL)   &kp LS(AT)    &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)    &kp LS(LPAR)  &kp LS(LBRC)  &kp LBKT  &kp RIGHT  &kp MINUS  &kp EQUAL
&kp LSHFT  &kp LS(CARET)  &kp LS(AMPS)  &kp LS(STAR)   &kp LS(LPAR)  &kp LS(RPAR)     &kp LS(RPAR)  &kp LS(RBRC)  &kp RBKT  &kp GRAVE  &kp FSLH   &kp RET
                                        &kp LCTRL      &kp LALT      &kp LGUI         &kp SPACE     &trans        &mo 3
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Raise";
            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH   &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS  &kp KP_MULTIPLY  &kp LPAR   &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans     &trans    &trans       &kp LEFT   &kp DOWN  &kp UP           &kp RIGHT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans     &trans    &trans       &kp UNDER  &kp PLUS  &kp LBRC         &kp RBRC   &kp PIPE  &kp TILDE
                             &kp LCTRL  &kp LALT  &kp LCMD     &kp RET    &trans    &kp RALT
            >;
        };

        extra_1 { status = "reserved"; };

        extra_2 { status = "reserved"; };

        extra_3 { status = "reserved"; };
    };
};
